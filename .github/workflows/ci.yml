name: Python CI

on:
  push:
    branches:
      - master*
  pull_request:
    branches:
      - master*
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 coverage
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics > flake8_report.txt
      - name: Run tests with coverage
        run: |
          coverage run --source=. manage.py test
          coverage report -m > coverage_report.txt
          coverage html
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            flake8_report.txt
            coverage_report.txt
            htmlcov/
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and test Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: the-button:${{ github.sha }}
          load: true

      # ... inne kroki build-and-push, np. Trivy, testowanie kontenera itp.

      - name: Tag and push Docker image
        if: github.event_name != 'pull_request'
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          docker tag the-button:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/the-button:${SHORT_SHA}
          docker tag the-button:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/the-button:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/the-button:${SHORT_SHA}
          docker push ${{ secrets.DOCKER_USERNAME }}/the-button:latest
  deploy-to-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Show environment variables
        run: |
          echo "Deploying to ${{ vars.ENVIRONMENT_NAME }} environment"
          echo "Using token: ${{ secrets.DEPLOY_TOKEN != '' && '***' || 'Not set' }}"
      - name: Mock deployment
        run: |
          echo "Starting deployment to development environment..."
          sleep 5
          echo "Deployment to development environment completed!"
  deploy-to-production:
    needs: deploy-to-dev
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Show environment variables
        run: |
          echo "Deploying to ${{ vars.ENVIRONMENT_NAME }} environment"
          echo "Using token: ${{ secrets.DEPLOY_TOKEN != '' && '***' || 'Not set' }}"
      - name: Mock deployment
        run: |
          echo "Starting deployment to production environment..."
          sleep 10
          echo "Deployment to production environment completed!"
